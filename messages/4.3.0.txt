SublimeLinter 4.3
=================


For users
---------

- UI: Show the active/assigned linters in the status bar. SL will show e.g. 'eslint(ok)' if there were no errors, otherwise 'eslint(1|2)' when there is 1 warning and 2 errors. If there is a hard error with the configuration it will state 'eslint(erred)'
- UI: Hovering over errors should always open the right tooltip. Also multiline errors work now.
- UI: Fixed a bug where not all gutter icons were drawn.
- Backend: The debounce delay before a lint in background mode will now be set automatically considering how fast your computer and your linters actually are. 
- Backend: Implemented upper limit for how many lint processes can run in parallel. 
- Backend: There is a new setting 'kill_old_processes'. If you set it to true, SL will send a 'terminate' signal to processes when SL won't use its output anymway.
- Backend: Much improved logging about what command SL actually runs.
- OSX: Wait with the first lint until the env has been loaded by Sublime. (But max. 1 minute.)


For developers
--------------

- BREAKING: For STREAM_BOTH linters we will call 'linter.on_stderr()' automatically if there is any output on 'stderr' and only pass 'stdout' down. (Set 'on_stderr = None' to disable.)
- New API: popen calls now return an object not just a string of the output with the typical members '.stdout/.stderr/returncode'. For compatibility, only the new 'linter.parse_output(proc, virtual_view)' actually sees this 'proc'.
- If the linter failed, call 'self.notify_failure()'. (You should additionally log the error either as an error or a warning.)
- In the defaults setting we now support flags like "{'--stdin': True|False}". You can also just define e.g. "{'--include': ''}" instead of "{'--include:': ''}"
- Get the linter settings via 'get_linter_settings(linter, view)'
- BREAKING: Removed 'util.popen()'
- BREAKING: Removed 'linter.build_options()'
- DEPRECATED: 'util.communicate' has been deprecated, the functionality is now in 'self._communicate'. If you need to quickly run a command, use 'util.check_output'
- 
